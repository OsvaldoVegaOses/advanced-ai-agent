name: Azure App Service - Fixed Deployment

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  PYTHON_VERSION: '3.11'
  AZURE_WEBAPP_NAME: 'advanced-ai-agent-0003'

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Create deployment package
      run: |
        # Create deployment directory
        mkdir -p deployment
        
        # Copy main application files
        cp app.py requirements.txt startup.sh deployment/
        cp diagnose.py deployment/ || echo "Optional file not found"
        
        # Copy frontend if exists
        if [ -d "frontend-new" ]; then
          cp -r frontend-new deployment/
        fi
        
        # Create deployment zip
        cd deployment
        zip -r ../deployment.zip .
        cd ..

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy to Azure App Service
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        package: deployment.zip

    - name: Wait for deployment
      run: sleep 30

    - name: Health Check
      run: |
        echo "üîç Running health check..."
        response=$(curl -s -o /dev/null -w "%{http_code}" https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net/health)
        if [ "$response" = "200" ]; then
          echo "‚úÖ Health check passed"
        else
          echo "‚ùå Health check failed with code: $response"
          exit 1
        fi

    - name: Test Chat Endpoint
      run: |
        echo "üîç Testing chat endpoint..."
        response=$(curl -s -X POST https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net/chat \
          -H "Content-Type: application/json" \
          -d '{"message":"Test deployment","conversation_id":"test"}' \
          -w "%{http_code}" -o /tmp/chat_response.json)
        
        if [ "$response" = "200" ]; then
          echo "‚úÖ Chat endpoint working"
          cat /tmp/chat_response.json
        else
          echo "‚ö†Ô∏è Chat endpoint returned: $response"
          cat /tmp/chat_response.json || echo "No response body"
        fi