version: '3.8'

services:
  # Development API with hot reload
  api-dev:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - ENVIRONMENT=development
      - DEBUG=True
      - DATABASE_URL=postgresql://ai_agent_user:ai_agent_password@postgres:5432/ai_agent_db
      - REDIS_URL=redis://redis:6379/0
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - /app/__pycache__
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload --log-level debug
    restart: unless-stopped

  # PostgreSQL with development data
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ai_agent_db
      POSTGRES_USER: ai_agent_user
      POSTGRES_PASSWORD: ai_agent_password
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./scripts/init-dev-db.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ai_agent_user -d ai_agent_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for development
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    command: redis-server --appendonly yes --requirepass devpassword
    healthcheck:
      test: ["CMD", "redis-cli", "auth", "devpassword", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Celery worker for development
  celery-worker-dev:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - ENVIRONMENT=development
      - DEBUG=True
      - DATABASE_URL=postgresql://ai_agent_user:ai_agent_password@postgres:5432/ai_agent_db
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
    volumes:
      - .:/app
    depends_on:
      - postgres
      - redis
    command: celery -A core.celery worker --loglevel=debug --concurrency=2
    restart: unless-stopped

  # Development database admin
  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8080:80"
    depends_on:
      - postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  # Redis admin interface
  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=local:redis:6379:0:devpassword
    ports:
      - "8081:8081"
    depends_on:
      - redis

  # Local development proxy
  nginx-dev:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.dev.conf:/etc/nginx/nginx.conf
    depends_on:
      - api-dev

volumes:
  postgres_dev_data:
  redis_dev_data:
  pgadmin_data: